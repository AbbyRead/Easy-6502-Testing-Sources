define 	placement	$00
define 	fg 		$01
define	bg		$02
define  border		$03
define	screen		$04
define	score		$05

init:
	lda #$21
	sta placement 	; universal offset

	lda #$01
	sta fg		; foreground color

	lda #$00
	sta bg		; background color

	lda #$09
	sta border	; text border color

	lda #$02
	sta screen	; screen color

	lda #$00
	sta score	; default score

main:
	jsr clearScreen
	jsr print
	jmp exit

sleep:
	ldx #$00
sloop:
	nop
	nop
	dex
	bne sloop
	rts	

print:
	; the display holds 8 spaces
	jsr scoreboard
	jsr clearDigits	; right-ending
	jsr printScore
	rts

printScore:
	ldx score
	beq prnt0
	dex
	beq prnt1
	dex
	beq prnt2
	dex
	beq prnt3
	dex
	beq prnt4
	dex
	beq prnt5
	dex
	beq prnt6
	dex
	beq prnt7
	dex
	beq prnt8
	dex
	beq prnt9
scorePrinted:
	rts

prnt0:
	jsr num0
	jmp scorePrinted
prnt1:
	jsr num1
	jmp scorePrinted
prnt2:
	jsr num2
	jmp scorePrinted
prnt3:
	jsr num3
	jmp scorePrinted
prnt4:
	jsr num4
	jmp scorePrinted
prnt5:
	jsr num5
	jmp scorePrinted
prnt6:
	jsr num6
	jmp scorePrinted
prnt7:
	jsr num7
	jmp scorePrinted
prnt8:
	jsr num8
	jmp scorePrinted
prnt9:
	jsr num9
	jmp scorePrinted


demo:
	jsr return
	jsr num0
	jsr movR
	jsr num1
	jsr movR
	jsr num2
	jsr movR
	jsr num3
	jsr movR
	jsr num4
	jsr movR
	jsr num5
	jsr movR
	jsr num6
	jsr movR
	jsr num7
	jsr sleep
	jsr return
	jsr num8
	jsr movR
	jsr num9
	rts

movL:
	sec
	lda placement
	sbc #4
	sta placement
	rts

movR:
	clc
	lda #4
	adc placement
	sta placement
	rts

return:
	lda #$21
	sta placement
	rts

addBorder:
	lda placement
	sec
	sbc #$21	; move up-left one pixel
	tax
	lda border
	sta $0200, x	; top
	sta $0201, x
	sta $0202, x
	sta $0203, x
	sta $0220, x	; left side
	sta $0240, x
	sta $0260, x
	sta $0280, x
	sta $02a0, x
	sta $02c0, x	; bottom
	sta $02c1, x
	sta $02c2, x
	sta $02c3, x
	rts

num_:
	ldx placement
	
	; for manual bg blanking
	lda bg
	sta $0200, x
	sta $0201, x
	sta $0202, x
	sta $0220, x
	sta $0221, x
	sta $0222, x
	sta $0240, x
	sta $0241, x
	sta $0242, x
	sta $0260, x
	sta $0261, x
	sta $0262, x
	sta $0280, x
	sta $0281, x
	sta $0282, x
	rts

num0:
	ldx placement
	
	; clean area
	lda bg
	sta $0221, x
	sta $0241, x
	sta $0261, x
	
	; print digit
	lda fg
	sta $0200, x
	sta $0201, x
	sta $0202, x
	sta $0220, x
	sta $0222, x
	sta $0240, x
	sta $0242, x
	sta $0260, x
	sta $0262, x
	sta $0280, x
	sta $0281, x
	sta $0282, x
	rts

num1:
	ldx placement
	
	; clean area
	lda bg
	sta $0200, x
	sta $0202, x
	sta $0222, x
	sta $0240, x
	sta $0242, x
	sta $0260, x
	sta $0262, x

	; print digit
	lda fg
	sta $0201, x
	sta $0220, x
	sta $0221, x
	sta $0241, x
	sta $0261, x
	sta $0280, x
	sta $0281, x
	sta $0282, x
	rts

num2:
	ldx placement
	
	; clean area
	lda bg
	sta $0202, x
	sta $0220, x
	sta $0221, x
	sta $0240, x
	sta $0241, x
	sta $0262, x
	
	; print digit
	lda fg
	sta $0200, x
	sta $0201, x
	sta $0201, x
	sta $0222, x
	sta $0242, x
	sta $0260, x
	sta $0261, x
	sta $0280, x
	sta $0281, x
	sta $0282, x
	rts
	
num3:
	ldx placement
	
	; clean area
	lda bg
	sta $0220, x
	sta $0221, x
	sta $0240, x
	sta $0242, x
	sta $0260, x
	sta $0261, x
	sta $0282, x
	
	; print digit
	lda fg
	sta $0200, x
	sta $0201, x
	sta $0202, x
	sta $0222, x
	sta $0241, x
	sta $0262, x
	sta $0280, x
	sta $0281, x
	rts
	
num4:
	ldx placement
	
	; clean area
	lda bg
	sta $0201, x
	sta $0202, x
	sta $0221, x
	sta $0260, x
	sta $0261, x
	sta $0280, x
	sta $0281, x
	
	; print digit
	lda fg
	sta $0200, x
	sta $0220, x
	sta $0222, x
	sta $0240, x
	sta $0241, x
	sta $0242, x
	sta $0262, x
	sta $0282, x
	rts

num5:
	ldx placement
	
	; clean area
	lda bg
	sta $0221, x
	sta $0222, x
	sta $0260, x
	sta $0261, x
	sta $0282, x
	
	; print digit
	lda fg
	sta $0200, x
	sta $0201, x
	sta $0202, x
	sta $0220, x
	sta $0240, x
	sta $0241, x
	sta $0242, x
	sta $0262, x
	sta $0280, x
	sta $0281, x
	rts	

num6:
	ldx placement
	
	; clean area
	lda bg
	sta $0200, x
	sta $0221, x
	sta $0222, x
	sta $0261, x
	
	; print digit
	lda fg
	sta $0201, x
	sta $0202, x
	sta $0220, x
	sta $0240, x
	sta $0241, x
	sta $0242, x
	sta $0260, x
	sta $0262, x
	sta $0280, x
	sta $0281, x
	sta $0282, x
	rts	

num7:
	ldx placement
	
	; clean area
	lda bg
	sta $0220, x
	sta $0221, x
	sta $0240, x
	sta $0242, x
	sta $0260, x
	sta $0262, x
	sta $0280, x
	sta $0282, x
	
	; print digit
	lda fg
	sta $0200, x
	sta $0201, x
	sta $0202, x
	sta $0222, x
	sta $0241, x
	sta $0261, x
	sta $0281, x
	rts	

num8:
	ldx placement
	
	; clean area
	lda bg
	sta $0202, x
	sta $0221, x
	sta $0261, x
	
	; print digit
	lda fg
	sta $0200, x
	sta $0201, x
	sta $0220, x
	sta $0222, x
	sta $0240, x
	sta $0241, x
	sta $0242, x
	sta $0260, x
	sta $0262, x
	sta $0280, x
	sta $0281, x
	sta $0282, x
	rts	

num9:
	ldx placement
	
	; clean area
	lda bg
	sta $0221, x
	sta $0260, x
	sta $0261, x
	sta $0282, x
	
	; print digit
	lda fg
	sta $0200, x
	sta $0201, x
	sta $0202, x
	sta $0220, x
	sta $0222, x
	sta $0240, x
	sta $0241, x
	sta $0242, x
	sta $0262, x
	sta $0280, x
	sta $0281, x
	rts

scoreboard:
	jsr return
	jsr addBorder
	jsr movR
	jsr addBorder
	jsr movR
	jsr addBorder
	jsr movR
	jsr addBorder
	jsr movR
	jsr addBorder
	jsr movR
	jsr addBorder
	jsr movR
	jsr addBorder
	jsr movR
	jsr addBorder
	jsr return
	rts

clearDigits:
	jsr return
	jsr num_
	jsr movR
	jsr num_
	jsr movR
	jsr num_
	jsr movR
	jsr num_
	jsr movR
	jsr num_
	jsr movR
	jsr num_
	jsr movR
	jsr num_
	jsr movR
	jsr num_
	rts

clearScreen:
	lda #$02
	sta $11
	lda screen
	ldy #$00
	ldx #$04
cloop:
	sta ($10), y
	iny
	bne cloop
	inc $11
	dex
	bne cloop
	stx $11
	rts	

exit:
